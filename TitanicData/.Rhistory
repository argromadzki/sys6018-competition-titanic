# ----PROBLEM 3----
# create a new column with the difference between each student's
# midterm and final exam scores; then find x < 2 and x > 10
cg["grade_difference"] <- NA
cg
cg['grade_difference'] <- abs(cg$Midterm - cg$Final)
cg
consistent <- group_by( cg, grade_difference <= 2 )
library(tidyverse)
consistent <- group_by( cg, grade_difference <= 2 )
consistent
View(cg)
View(cg)
stat_andB <- group_by( cg, prev == 'Y', course_average >= 83)
nostat_andB <- group_by(cg, prev == 'N', course_average >= 83)
library(tidyverse)
cg <- read_csv("coursegrades.csv")
ff <- read_csv("fastfood.csv")
# Alex Gromadzki
# Homework 1 -- arg2eu
library(tidyverse)
cg <- read_csv("coursegrades.csv")
ff <- read_csv("fastfood.csv")
cg
# ----PROBLEM 1----
# find the course average
# 10 HW /200
# 20 Quiz /45
# 30 Midterm /100
# 40 Final /100
cg["course_average"] <- NA
cg
cg$"course_average" <- (.1*(cg$HW/200)+.2*(cg$Quiz/45)+
.3*(cg$Midterm/100) +.4*(cg$Final/100)) * 100
cg
#note to self, I have this in percent, not decimal
# double check -- ID AAMUK should have 80.58% per below
.1*(197/200) + .2*(39/45) +.3*(68/100) + .4*(82.5/100)
p <-sum(cg$course_average > 82)/483 # 1.A. count how many studetns had over an 82%, then
# divide by 483 (the number of obsvervations)
# using formula find 95% confidence that 36% of kids got 82 avgs
# z here is 1.96 for 95% interval
# p +- z * sqrt [p*(1-p) / n]
p + 1.96 * sqrt(p*(1-p)/ 483) # output = 0.4094313
p - 1.96 * sqrt(p*(1-p)/ 483) # output = 0.3234879
# ----PROBLEM 2 ----
# next method, using critical t-values
t = qt(.975, 482) # remember to find a t-value for 95% interval, you need to find .025 for either tail
t
cgxbar <- mean(cg$course_average)
cgxbar + t * sd(cg$course_average) / sqrt(483) # output = 78.24951
cgxbar - t * sd(cg$course_average) / sqrt(483) # output = 76.27501
# ----PROBLEM 3----
# create a new column with the difference between each student's
# midterm and final exam scores; then find x < 2 and x > 10
cg["grade_difference"] <- NA
cg
cg['grade_difference'] <- abs(cg$Midterm - cg$Final)
cg
consistent <- group_by( cg, grade_difference <= 2 )
consistent
consistent_count <-
inconsistent <- group_by( cg, grade_difference >= 10)
# ----PROBLEM 4 ----
# need two groups -- stats and non stats students who got a B or up
stat_andB <- group_by( cg, prev == 'Y', course_average >= 83)
nostat_andB <- group_by(cg, prev == 'N', course_average >= 83)
# stdev_prop <- sqrt(((p1*(1-p1))/n1) + ((p2*(1-p2))/n2))
# high_bound_ci_prop <- z + stdev_prop
# low_bound_ci_prop <- z - stdev_prop
cg
View(cg)
# need two groups -- stats and non stats students who got a B or up
stat_andB <- group_by( cg, Prev == 'Y', course_average >= 83)
nostat_andB <- group_by(cg, Prev == 'N', course_average >= 83)
consistent <- group_by( cg, grade_difference <= 2 )
consistent
consistent_count <- (count(consistent))
consistent_count
consistent_count <- (count(consistent == TRUE))
consistent <- group_by( cg, grade_difference <= 2)
consistent
consistent_count <- (sum(consistent == TRUE))
consistent_count
inconsistent <- group_by( cg, grade_difference >= 10)
inconsistent_count <- (sum (inconsistent == TRUE))
consistent <- group_by( cg, grade_difference <= 2)
consistent
consistent_count <- (sum(consistent == TRUE))
consistent_count
inconsistent <- group_by( cg, grade_difference >= 10)
inconsistent_count <- (sum (inconsistent == TRUE))
inconsistent_count
consistent <- group_by( cg, grade_difference <= 2)    # creates a T/F column -- T is all less than or equal to 2
consistent
library(tidyverse)
cg <- read_csv("coursegrades.csv")
ff <- read_csv("fastfood.csv")
cg['grade_difference'] <- abs(cg$Midterm - cg$Final)
consistent <- group_by( cg, grade_difference <= 2)    # creates a T/F column -- T is all less than or equal to 2
consistent
consistent_count <- (sum(consistent == TRUE))
consistent_mean <- mean(consistent == TRUE)
consistent_mean
consistent_mean <- mean(cg$consistent == TRUE)
consistent_mean
consistent_mean <- mean( cg$course_average, consistent == TRUE)
consistent_mean
cg["grade_difference"] <- NA
cg
cg['grade_difference'] <- abs(cg$Midterm - cg$Final)
cg
consistent <- group_by( cg, grade_difference <= 2)
consistent_mean <- mean( cg$course_average, consistent == TRUE)
consistent_mean
consistent <- group_by( cg, grade_difference <= 2)    # creates a T/F column -- T is all less than or equal to 2
consistent_mean <- summarize( consistent, mean(cgroupmean))
consistent <- group_by( cg, grade_difference <= 2)    # creates a T/F column -- T is all less than or equal to 2
consistent_mean <- summarize( consistent, mean(course_average))
consistent_mean
consistent_mean <- summarize( consistent, cmean = mean(course_average))
consistent_mean
t = qt(.975, 483) # remember to find a t-value for 95% interval, you need to find .025 for either tail
t
cgxbar <- mean(cg$course_average)
cgxbar + t * sd(cg$course_average) / sqrt(483) # output = 78.24951
cgxbar - t * sd(cg$course_average) / sqrt(483) # output = 76.27501
consistent_mean + t * sd(cg$course_average, consistent == TRUE) / sqrt(483)
consistent <- group_by( cg, grade_difference <= 2)    # creates a T/F column -- T is all less than or equal to 2
consistent_mean <- summarize( consistent, cmean = mean(course_average), csd = sd(course_average))
consistent_mean
inconsistent <- group_by( cg, grade_difference >= 10)
inconsistent_mean <- summarize( inconsistent, icmean = mean(course_average), isd = sd(course_average))
inconsistent_mean
consistent_mean + tcon * 11.6 / sqrt(92)
tcon <- qt(.975, 92)
consistent_mean + tcon * 11.6 / sqrt(92)
consistent <- group_by( cg, grade_difference <= 2)    # creates a T/F column -- T is all less than or equal to 2
consistent_info <- summarize( consistent, cmean = mean(course_average), csd = sd(course_average))
consistent_info # mean is 78.6, sd is 11.6
consistent_count <- (sum(consistent == TRUE))         # count how many Trues we have
consistent_count # = 92
tcon <- qt(.975, 92)
c_upper <-78.6 + tcon * 11.6 / sqrt(92)
c-lower <- 78.6 + tcon * 11.6 / sqrt(92)
answer3 <- c(c_lower,c_upper)
c_upper <- (78.6 + tcon * 11.6 / sqrt(92))
c-lower <- (78.6 + tcon * 11.6 / sqrt(92))
c_upper <- (78.6 + tcon * 11.6 / sqrt(92))
c_lower <- (78.6 + tcon * 11.6 / sqrt(92))
answer3 <- c(c_lower,c_upper)
answer3
c_upper <- (78.6 + tcon * 11.6 / sqrt(92))
c_lower <- (78.6 - tcon * 11.6 / sqrt(92))
answer3 <- c(c_lower,c_upper)
answer3
answer3 <- c('('+c_lower,c_upper+')')
answer3
answer3 <- c('(',c_lower,c_upper,')')
answer3
answer3 <- c(c_lower, c_upper)
answer3
inconsistent_info <- summarize( inconsistent, icmean = mean(course_average), isd = sd(course_average))
inconsistent_info #
consistent
consistent == TRUE
consistent <- group_by( cg, grade_difference <= 2)    # creates a T/F column -- T is all less than or equal to 2
consistent
library(tidyverse)
library(readr)  # Provides "read_csv" function
library(dplyr)  # Allows for nicer display of data frame
setwd("~/UVA/DSI/Fall 2018/SYS/Mining in R/Homework/Homework 0/sys6018-competition-titanic/TitanicData")
original_data <- read_csv("train.csv")
training_data <- original_data
testing_data <- read_csv("test.csv")
plot(training_data,pch=20,cex=.2)
training_data2 <- mutate(training_data,
Cabin2 = if_else(is.nan(Cabin), true = 0, false = 1),
Age2 = if_else(is.nan(Age), true = 0, false = 1),
SibSp2 = if_else(is.nan(SibSp), true = 0, false = 1))
plot(training_data)
training_data2 <- mutate(training_data,
training_data2 <- mutate(training_data,
Cabin2 = if_else(is.nan(Cabin), true = 0, false = 1),
Age2 = if_else(is.nan(Age), true = 0, false = 1),
SibSp2 = if_else(is.nan(SibSp), true = 0, false = 1))
training_data2
training_data2 <- mutate(training_data,
Cabin2 = if_else(is.nan(Cabin), true = 0, false = 1),
Age2 = if_else(is.nan(Age), true = 0, false = 1),
SibSp2 = if_else(is.nan(SibSp), true = 0, false = 1))
training_data2
training_data2 <- mutate(training_data,
Cabin2 = if_else(is.nan(Cabin), true = 0, false = 1, missing = 0),
Age2 = if_else(is.nan(Age), true = 0, false = 1, missing = 0),
SibSp2 = if_else(is.nan(SibSp), true = 0, false = 1, missing = 0))
training_data2
training_data
#==============Attempt====================
training_data$Pclass <- factor(training_data$Pclass)
training_data$Sex <- factor(training_data$Sex)
training_data$Age <- factor(training_data$Age)
training_data$SibSp <- factor(training_data$SibSp)
training_data$Parch <- factor(training_data$Parch)
training_data$Cabin <- factor(training_data$Cabin)
training_data$Embarked <- factor(training_data$Embarked)
training_glm1 <- glm(Survived ~ .-Name -Ticket -Cabin, data=training_data)
summary(training_glm1)
training_glm2 <- glm(Survived ~ .-Name -Ticket -Cabin -Embarked, data=training_data)
summary(training_glm2)
training_glm3 <- glm(Survived ~ .-Name -Ticket -Cabin -Embarked -Pclass -SibSp -Parch, data=training_data)
summary(training_glm3)
View(training_data2)
is.na(NA)
is.na()
is.na( )
is.na(NA)
training_data2 <- mutate(training_data,
Cabin2 = if_else(is.nan(Cabin), true = 0, false = 1),
Age2 = if_else(is.nan(Age), true = 0, false = 1),
SibSp2 = if_else(is.nan(SibSp), true = 0, false = 1))
is.na(NA)
training_data2
library(tidyverse)
library(readr)  # Provides "read_csv" function
library(dplyr)  # Allows for nicer display of data frame
setwd("~/UVA/DSI/Fall 2018/SYS/Mining in R/Homework/Homework 0/sys6018-competition-titanic/TitanicData")
original_data <- read_csv("train.csv")
training_data <- original_data
testing_data <- read_csv("test.csv")
training_data2 <- mutate(training_data,
Cabin2 = if_else(is.nan(Cabin), true = 0, false = 1),
Age2 = if_else(is.nan(Age), true = 0, false = 1),
SibSp2 = if_else(is.nan(SibSp), true = 0, false = 1))
training_data2
training_data2 <- mutate(training_data, Cabin2 = if_else(Cabin=="NA", true = 0, false = 1))
training_data2
library(tidyverse)
library(readr)  # Provides "read_csv" function
library(dplyr)  # Allows for nicer display of data frame
setwd("~/UVA/DSI/Fall 2018/SYS/Mining in R/Homework/Homework 0/sys6018-competition-titanic/TitanicData")
original_data <- read_csv("train.csv")
training_data <- original_data
testing_data <- read_csv("test.csv")
training_data2 <- mutate(training_data, Cabin2 = if_else(Cabin=="NA", true = 0, false = 1))
training_data2
training_data2 <- mutate(training_data, Cabin2 = if_else(Cabin=="NA", true = 0, false = 1, missing = 0))
training_data2
training_data2 <- mutate(training_data,
Cabin2 = if_else(Cabin=="NA", true = 0, false = 1, missing = 0),
Age2 = if_else(Age=="NA", true = 0, false = 1, missing = 0))
training_data2
(training_data2$Age2 == 0)
training_data[(training_data2$Age2 == 0),]
training_data[(training_data2$Age2 == 1),]
training_data
training_data2[(training_data2$Age2 == 1),]
m.ages <- mean(all_ages)
m.ages <- mean(training_data2$all_ages)
all_ages
all_ages <- training_data2[(training_data2$Age2 == 1),]
m.ages <- mean(training_data2$all_ages)
all_ages
all__with_ages <- training_data2[(training_data2$Age2 == 1),]
m.ages <- mean(all_with_ages$Age)
all__with_ages
m.ages <- mean(all_with_ages$Age)
all__with_ages <- training_data2[(training_data2$Age2 == 1),]
all_with_ages <- training_data2[(training_data2$Age2 == 1),]
m.ages <- mean(all_with_ages$Age)
m.ages
training_data3 <- mutate(training_data,
Cabin = if_else(Cabin=="NA"), true = "NONE", false == Cabin, missing = "NONE")
training_data3 <- mutate(training_data,
Cabin = if_else(Cabin=="NA", true = "NONE", false == Cabin, missing = "NONE"))
training_data3 <- mutate(training_data,
Cabin = if_else(Cabin=="NA", true = "NONE", false = Cabin, missing = "NONE"))
training_data3
View(training_data3)
training_data3 <- mutate(training_data,
Cabin = if_else(Cabin=="NA", true = "NONE", false = Cabin, missing = "NONE"),
Age = if_else(Age=="NA", true = m.ages, false = Age, missing = m.ages))
training_data3
#==============Attempt====================
training_data$Pclass <- factor(training_data$Pclass)
training_data$Sex <- factor(training_data$Sex)
training_data$Age <- factor(training_data$Age)
training_data$SibSp <- factor(training_data$SibSp)
training_data$Parch <- factor(training_data$Parch)
training_data$Cabin <- factor(training_data$Cabin)
training_data$Embarked <- factor(training_data$Embarked)
training_glm1 <- glm(Survived ~ .-Name -Ticket -Cabin, data=training_data)
summary(training_glm1)
training_glm2 <- glm(Survived ~ .-Name -Ticket -Cabin -Embarked, data=training_data)
summary(training_glm2)
training_glm3 <- glm(Survived ~ .-Name -Ticket -Cabin -Embarked -Pclass -SibSp -Parch, data=training_data)
summary(training_glm3)
#==============Attempt====================
training_data3$Pclass <- factor(training_data3$Pclass)
training_data3$Sex <- factor(training_data3$Sex)
training_data3$Age <- factor(training_data3$Age)
training_data3$SibSp <- factor(training_data3$SibSp)
training_data3$Parch <- factor(training_data3$Parch)
training_data3$Cabin <- factor(training_data3$Cabin)
training_data3$Embarked <- factor(training_data3$Embarked)
training_glm1 <- glm(Survived ~ .-Name -Ticket -Cabin, data=training_data3)
summary(training_glm1)
training_glm2 <- glm(Survived ~ .-Name -Ticket -Cabin -Embarked, data=training_data3)
summary(training_glm2)
training_glm3 <- glm(Survived ~ .-Name -Ticket -Cabin -Embarked -Pclass -SibSp -Parch, data=training_data3)
summary(training_glm3)
training_glm1 <- lm(Survived ~ .-Name -Ticket -Cabin, data=training_data3)
summary(training_glm1)
